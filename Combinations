Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.
For example, If n = 4 and k = 2, a solution is:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]

1.
//backtracking
public class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> lists = new ArrayList<List<Integer>>();
        if(k>n || n<=0 || k<=0) return lists;
        helper(n, k, 1, new ArrayList<Integer>(), lists);
        return lists;
    }
    public void helper(int n, int k, int start, List<Integer> item, List<List<Integer>> lists){
        if(item.size()==k){
            lists.add(new ArrayList<Integer>(item));
            return;
        }
        for(int i=start;i<=n;++i){
            item.add(i);
            helper(n, k, i+1, item, lists);
            item.remove(item.size()-1);
        }
    }
}
