Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). 
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). 
Find two lines, which together with x-axis forms a container, such that the container contains the most water.
Note: You may not slant the container.

1.
//从数组两端走起，每次迭代时判断左pointer和右pointer指向的数字哪个大，如果左pointer小，
//意味着向左移动右pointer不可能使结果变得更好，因为瓶颈在左pointer，移动右pointer只会变小，
//所以这时候我们选择左pointer右移。反之，则选择右pointer左移。在这个过程中一直维护最大的那个容积。
//time: O(n) space: O(1)
public class Solution {
    public int maxArea(int[] height) {
        if(height==null || height.length<2) return 0;
        int max=0, left=0, right=height.length-1;
        while(left<right){
            max = Math.max(max, (right-left) * Math.min(height[left], height[right]));
            if(height[left]<height[right]){
                left++;
            } 
            else if(height[right]<height[left]){
               right--; 
            } 
            else{
                left++;
                right--;
            }
        }
        return max;
    }
}
