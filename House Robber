You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, 
the only constraint stopping you from robbing each of them is that adjacent houses have security system connected 
and it will automatically contact the police if two adjacent houses were broken into on the same night.
Given a list of non-negative integers representing the amount of money of each house, 
determine the maximum amount of money you can rob tonight without alerting the police.

1. using one-dimensional array, res[i]表示到i位置时不相邻数能形成的最大和
public class Solution {
    public int rob(int[] nums) {
        if(nums.length==0){
            return 0;
        }
        if(nums.length==1){
            return nums[0];
        }
        int[] res = new int[nums.length];
        res[0] = nums[0];
        res[1] = Math.max(nums[0], nums[1]);
        for(int i=2;i<nums.length;i++){
            res[i] = Math.max(nums[i]+res[i-2], res[i-1]);
        }
        return res[nums.length-1];
    }
}

2. using two variables to replace the array
public class Solution {
    public int rob(int[] nums) {
        if(nums.length==0){
            return 0;
        }
        if(nums.length==1){
            return nums[0];
        }
        return helper(nums, 0, nums.length-1);
    }
    public int helper(int[] nums, int low, int high){
        int pre=0, cur=0;
        for(int i=low;i<=high;i++){
            int next = Math.max(pre+nums[i], cur);
            pre = cur;
            cur = next;
        }
        return cur;
    }
}
