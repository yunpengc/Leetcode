Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?
Would this affect the run-time complexity? How and why?
Write a function to determine if a given target is in the array.

1.
//iterate the array
//time:O(n)
public class Solution {
    public boolean search(int[] A, int target) {
        if(A.length==0) return false;
        for(int i=0;i<A.length;++i){
            if(A[i]==target)
                return true;
        }
        return false;
    }
}

2.
//binary search
//time:O(n)
public class Solution {
    public boolean search(int[] A, int target) {
        if(A.length==0) return false;
        int left=0, right=A.length-1;
        int mid=(left+right)/2;
        while(left<=right){
            mid=(left+right)/2;
            if(A[mid]==target) return true;
            if(A[left]==target) return true;
            if(A[right]==target) return true;
            if(A[left]<A[mid]){
                if(target>A[left] && target<A[mid])
                    right=mid-1;
                else
                    left=mid+1;
            }else if(A[left]==A[mid]){
                left++;
            }else{
                if(target>A[mid] && target<A[right])
                    left=mid+1;
                else
                    right=mid-1;
            }
        }
        return false;
    }
}
