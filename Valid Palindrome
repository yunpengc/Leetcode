Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.
For example, "A man, a plan, a canal: Panama" is a palindrome. "race a car" is not a palindrome.
Note: Have you consider that the string might be empty? This is a good question to ask during an interview.
For the purpose of this problem, we define empty string as valid palindrome.

1. Mine
//time:O(n), space:O(n)
public class Solution {
    public boolean isPalindrome(String s) {
        if(s.length()==0 || s.equals("")) return true;
        s=s.toLowerCase().trim();
        if(s.length()==0 || s.equals("")) return true;
        char[] ss=s.toCharArray();
        int index=0;
        for(int i=0;i<ss.length;++i){
            if((ss[i]>='0' && ss[i]<='9') || (ss[i]>='a' && ss[i]<='z')){
                ss[index++]=ss[i];
            }
        }
        if(index==1 || index==0) return true;
        Stack<Character> stack = new Stack<Character>();
        int j=0;
        if(index % 2==1){
            while(j<index/2+1){
                stack.push(ss[j++]);
            }
            j--;
        }else{
            while(j<index/2){
                stack.push(ss[j++]);
            }
        }
        while(j<index){
            if(ss[j++]!=stack.pop()) return false;
        }
        return true;
    }
}

2. Improved
//time: O(n), space: O(1)
public class Solution {
    public boolean isPalindrome(String s) {
        if(s.length()==0 || s=="") return true;
        int left=0, right=s.length()-1;
        while(left<right){
            if(!isValid(s.charAt(left))){
                left++;
                continue;
            }
            if(!isValid(s.charAt(right))){
                right--;
                continue;
            }
            if(!isSame(s.charAt(left),s.charAt(right))){
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
    public boolean isValid(char c){
        if((c>='a' && c<='z') || (c>='A' && c<='Z') || (c>='0' && c<='9'))
            return true;
        return false;
    }
    public boolean isSame(char c1, char c2){
        if(c1>='A'&&c1<='Z')
            c1=(char)(c1-'A'+'a');
        if(c2>='A'&&c2<='Z')
            c2=(char)(c2-'A'+'a');
        return c1==c2;
    }
}
