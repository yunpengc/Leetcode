Given a roman numeral, convert it to an integer.
Input is guaranteed to be within the range from 1 to 3999.

public class Solution {
    public int romanToInt(String s) {
        if(s=="") return -1;
        int len = s.length();
        char[] t = s.toCharArray();
        int sum = 0;
        int a = charToInt(t[len-1]);
        //from back to front, keep a max number. numbers from back are supposed to be small, 
        //if they are bigger than numbers from front, distract them
        int maxNum = a;  
        sum += a;
        for(int c=len-2;c>=0;--c){
            int b = charToInt(t[c]);
            if(maxNum>b){
                sum -= b;
            }else{
                sum += b;
                maxNum = b; //keep updated
            }
        }
        return sum;
    }
    
    public int charToInt(char a){
        switch(a){
            case 'I': 
                return 1;
            case 'V': 
                return 5;
            case 'X': 
                return 10;
            case 'L': 
                return 50;
            case 'C': 
                return 100;
            case 'D': 
                return 500;
            case 'M': 
                return 1000;
            default:
                return -1;
        }
    }
}
