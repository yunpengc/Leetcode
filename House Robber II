After robbing those houses on that street, the thief has found himself a new place for his thievery 
so that he will not get too much attention. This time, all houses at this place are arranged in a circle. 
That means the first house is the neighbor of the last one. Meanwhile, 
the security system for these houses remain the same as for those in the previous street.
Given a list of non-negative integers representing the amount of money of each house, 
determine the maximum amount of money you can rob tonight without alerting the police.

1.
// 现在房子排成了一个圆圈，则如果抢了第一家，就不能抢最后一家，因为首尾相连了，
// 所以第一家和最后一家只能抢其中的一家，或者都不抢.如果我们把第一家和最后一家分别去掉，
// 各算一遍能抢的最大值，然后比较两个值取其中较大的一个即为所求。
public class Solution {
    public int rob(int[] nums) {
        if(nums.length==0){
            return 0;
        }
        if(nums.length==1){
            return nums[0];
        }
        if(nums.length==2){
            return Math.max(nums[0], nums[1]);
        }
        return Math.max(helper(nums, 0, nums.length-2), helper(nums, 1, nums.length-1));
    }
    public int helper(int[] nums, int low, int high){
        int a=0, b=0;
        for(int i=low;i<=high;i++){
            int m=a, n=b;
            b = m + nums[i];
            a = Math.max(n, m);
        }
        return Math.max(a, b);
    }
}
