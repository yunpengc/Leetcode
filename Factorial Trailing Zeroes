Given an integer n, return the number of trailing zeroes in n!.
Note: Your solution should be in logarithmic time complexity.

1.
//recursive approach time:O(log n) space: O(1)
public class Solution {
    public int trailingZeroes(int n) {
        if(n<5) return 0;
        int counter = 0;
        counter += n/5 + trailingZeroes(n/5);
        return counter;
    }
}

2.
public class Solution {
    public int trailingZeroes(int n) {
      return n == 0 ? 0 : n / 5 + trailingZeroes(n / 5);
    }
}
