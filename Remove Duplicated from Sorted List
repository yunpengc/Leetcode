Given a sorted linked list, delete all duplicates such that each element appear only once.
For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.

1. Mine
//set another node object to replace head
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null || head.next==null) return head;
        ListNode tail = head;
        while(tail.next!=null){
            if(tail.val == tail.next.val){
                tail.next = tail.next.next;
            }else{
                tail = tail.next;
            }
        }
        return head;
    }
}

2.
//
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null) return null;
        if(head.next==null) return head;
        ListNode prev = head;
        ListNode curr = head.next;
        //not curr.next !!!!!
        while(curr!=null){
            if(prev.val == curr.val){
                prev.next = curr.next;
            }else{
                prev = curr;
            }
            curr = curr.next;
        }
        return head;
    }
}
