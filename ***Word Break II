Given a string s and a dictionary of words dict, 
add spaces in s to construct a sentence where each word is a valid dictionary word.
Return all such possible sentences. For example, given
s = "catsanddog", dict = ["cat", "cats", "and", "sand", "dog"].
A solution is ["cats and dog", "cat sand dog"].

1. Backtracking
// need to output as given format
public class Solution {
    public List<String> wordBreak(String s, Set<String> dict) {
        List<String> list = new ArrayList<String>();
        if(s==null || s.length()==0) return list;
        helper(s, dict, 0, "", list);
        return list;
    }
    public void helper(String s, Set<String> dict, int start, String item, List<String> list){
        if(start==s.length()){
            list.add(item);
            return;
        }
        StringBuilder sb = new StringBuilder();
        for(int i=start;i<s.length();++i){
            sb.append(s.charAt(i));
            if(dict.contains(sb.toString())){
                String newItem = item.length()>0?(item+" "+sb.toString()):sb.toString();
                helper(s, dict, i+1, newItem, list);
            }
        }
    }
}
