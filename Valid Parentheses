Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.
(Using Stack)

1.
//tiem: O(n), space: O(n)
public class Solution {
    public boolean isValid(String s) {
        if(s.length()==0 || s==null) return false;
        LinkedList<Character> stack = new LinkedList<Character>();
        for(int i=0;i<s.length();++i){
            switch(s.charAt(i)){
                case('('):
                case('{'):
                case('['):
                    stack.push(s.charAt(i));
                    break;
                case(')'):
                    if(stack.isEmpty() || stack.pop()!='(')
                        return false;
                        break;
                case('}'):
                    if(stack.isEmpty() || stack.pop()!='{')
                        return false;
                        break;
                case(']'):
                    if(stack.isEmpty() || stack.pop()!='[')
                        return false;
                        break;
                default:
                        break;
            }
        }
        if(stack.isEmpty())
            return true;
        return false;
    }
}
